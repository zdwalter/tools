// Generated by CoffeeScript 1.6.2
(function() {
  var b, d, loadJQuery, loadPlugin, loadScript, start;

  d = document;

  b = d.body;

  start = function() {
    var border, selected;

    console.log('start');
    selected = null;
    border = null;
    $(document).mousemove(function(e) {
      var element, x, y;

      x = e.clientX;
      y = e.clientY;
      element = document.elementFromPoint(x, y);
      if (selected !== element) {
        if (selected !== null) {
          selected.style.border = border;
        }
        selected = element;
        console.log(element);
        border = selected.style.border;
        return selected.style.border = "2px solid red";
      }
    });
    return $(document).click(function(e) {
      var elements, i, length, path, str;

      path = $(selected).getPath();
      elements = $(path);
      length = elements.length;
      i = 0;
      while (i < length) {
        if (elements[i] === selected) {
          str = "Path is\n$('" + path + "')[" + i + "]";
          console.log(str);
          alert(str);
          return;
        }
        i++;
      }
      return alert('Path is\n' + $(selected).getPath());
    });
  };

  loadScript = function(src, callback) {
    var s;

    console.log(src);
    s = d.createElement('script');
    s.setAttribute('src', src);
    b.appendChild(s);
    return s.onload = s.onreadystatechange = function() {
      if ((!this.readyStat) || (this.readyState === 'loaded') || (this.readyState === 'complete')) {
        return callback();
      }
    };
  };

  loadPlugin = function() {
    return loadScript('https://raw.githubusercontent.com/zdwalter/tools/master/jquery-getpath.js', function() {
      return start();
    });
  };

  loadJQuery = function() {
    if (typeof jQuery === "undefined" || jQuery === null) {
      return loadScript('http://code.jquery.com/jquery-2.1.4.min.js', function() {
        return loadPlugin();
      });
    } else {
      return loadPlugin();
    }
  };

  loadJQuery();

}).call(this);
